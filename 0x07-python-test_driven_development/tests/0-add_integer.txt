======================================
How to use the 0-add_integer function
======================================

This module defines an integer addition function ```add_integer(a, b=98)```

Usage:
=====

```add_integer(...)``` returns the addition of its two arguments. For 
numbers, thevalue it returns is equivalent to using the ```+``` operator

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(1, 10)
	11

::

	>>> add_integer(1, -1)
	0
The function also works with floating-point values.
::

	>>> add_integer(1.0, 3.0)
	4

Note float are converted to integer before additon

::
Floating point numbers and integers can also be added

	>>> add_integer(2.3, -5)
	-2.7
The second argument is optional - by default, it is 98.

::

    >>> add_integer(7)
    105

Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

    >>> add_integer("alx", 100)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(100, "alx")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2.5, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

::

    >>> add_integer("alx", "hard_things")
    Traceback (most recent call last):
    TypeError: a must be an integer

The function will fail if infinity is provided.

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer


::

    >>> add_integer(5, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

And again with NaN numbers.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(5, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
